// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBS.Data;

namespace NBS.Migrations
{
    [DbContext(typeof(NBSContext))]
    [Migration("20210511172913_ShiftDescriptionAddedToProjectPost")]
    partial class ShiftDescriptionAddedToProjectPost
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("NBS.ImageUpload.Models.ImageModel", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IncidentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ImageId");

                    b.HasIndex("IncidentId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("NBS.Models.DataModels.AgendaPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("AgendaPost");
                });

            modelBuilder.Entity("NBS.Models.DataModels.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Connectivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ethernet1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ethernet1LLDP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MACAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RFConnectedDevs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetStatusId");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("BrandId");

                    b.HasIndex("SiteId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("NBS.Models.DataModels.AssetStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.AssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetType");
                });

            modelBuilder.Entity("NBS.Models.DataModels.BPStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BPStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BPStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BillingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillingTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId1")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MtrCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NABLogId")
                        .HasColumnType("int");

                    b.Property<int?>("NABLogId1")
                        .HasColumnType("int");

                    b.Property<int?>("NABLogId2")
                        .HasColumnType("int");

                    b.Property<int?>("NABLogId3")
                        .HasColumnType("int");

                    b.Property<int?>("NABLogId4")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BillStatusId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CompanyId1");

                    b.HasIndex("NABLogId");

                    b.HasIndex("NABLogId1");

                    b.HasIndex("NABLogId2");

                    b.HasIndex("NABLogId3");

                    b.HasIndex("NABLogId4");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("NBS.Models.DataModels.BillStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BillStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.BillingPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BPStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Ended")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Incident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Outlay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Started")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WLNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BPStatusId");

                    b.HasIndex("PersonId");

                    b.ToTable("BillingPost");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyRoleId");

                    b.HasIndex("CompanyStatusId");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("NBS.Models.DataModels.CompanyRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyRoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyRole");
                });

            modelBuilder.Entity("NBS.Models.DataModels.CompanyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompanyType");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Incident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FEEExitsSite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FEEntersSite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FEScheduled")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncidentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncidentPriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("IncidentStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("IncidentTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IssueResolved")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MtrlListId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId1")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId2")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Received")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IncidentPriorityId");

                    b.HasIndex("IncidentStatusId");

                    b.HasIndex("IncidentTypeId");

                    b.HasIndex("MtrlListId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonId1");

                    b.HasIndex("PersonId2");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("SiteId");

                    b.ToTable("Incident");
                });

            modelBuilder.Entity("NBS.Models.DataModels.IncidentPriority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IncidentPriorityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncidentPriority");
                });

            modelBuilder.Entity("NBS.Models.DataModels.IncidentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IncidentStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncidentStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.IncidentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IncidentTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncidentType");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PlanId")
                        .HasColumnType("int");

                    b.Property<string>("TimeEnded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeStarted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("NBS.Models.DataModels.MtrlList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MtrlList");
                });

            modelBuilder.Entity("NBS.Models.DataModels.NABLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateTimeEnded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeStarted")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("IncidentId")
                        .HasColumnType("int");

                    b.Property<string>("LogNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MtrCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NABLogStatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WLogId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.HasIndex("NABLogStatusId");

                    b.HasIndex("WLogId");

                    b.ToTable("NABLog");
                });

            modelBuilder.Entity("NBS.Models.DataModels.NABLogStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NABLogStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NABLogStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateTimeOffered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeScheduledEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeScheduledStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HoursOnSite")
                        .HasColumnType("float");

                    b.Property<int?>("IncidentId")
                        .HasColumnType("int");

                    b.Property<double>("KostHours")
                        .HasColumnType("float");

                    b.Property<double>("KostMtrl")
                        .HasColumnType("float");

                    b.Property<string>("OfferIdenifyer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OfferStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<double>("PricePerHour")
                        .HasColumnType("float");

                    b.Property<double>("Riskfaktor")
                        .HasColumnType("float");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.Property<double>("TotalOfferAmount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.HasIndex("OfferStatusId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SiteId");

                    b.ToTable("Offer");
                });

            modelBuilder.Entity("NBS.Models.DataModels.OfferStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OfferStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OfferStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Outlay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateTimeChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimePosted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OutlayDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OutlayDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("StatusId");

                    b.ToTable("Outlays");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonAccountsId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ssn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PersonAccountsId");

                    b.HasIndex("PersonRoleId");

                    b.HasIndex("PersonStatusId");

                    b.HasIndex("PersonTypeId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("NBS.Models.DataModels.PersonAccounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwishNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonAccounts");
                });

            modelBuilder.Entity("NBS.Models.DataModels.PersonRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PersonRoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonRole");
                });

            modelBuilder.Entity("NBS.Models.DataModels.PersonStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PersonStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.PersonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PersonTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonType");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlanName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("SiteId");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("NBS.Models.DataModels.ProjectPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateTimeChanged")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeDone")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimePlaned")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimePosted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeStarted")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HourPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LabourCostActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MtrCostActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProjectPostDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectPostStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ShiftDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TimeActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TimeEstimate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCostActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCostEstimate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectPostStatusId");

                    b.ToTable("ProjectPost");
                });

            modelBuilder.Entity("NBS.Models.DataModels.ProjectPostStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectPostStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectPostStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeApproved")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("POHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("NBS.Models.DataModels.RequestPrio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RequestPrioDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestPrioName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequestPrios");
                });

            modelBuilder.Entity("NBS.Models.DataModels.RequestStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RequestStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequestStatuses");
                });

            modelBuilder.Entity("NBS.Models.DataModels.RequestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RequestTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequestTypes");
                });

            modelBuilder.Entity("NBS.Models.DataModels.SallaryAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("SallaryAccount");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfFloors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId1")
                        .HasColumnType("int");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("SiteStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("SiteTypeId")
                        .HasColumnType("int");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PersonId");

                    b.HasIndex("PersonId1");

                    b.HasIndex("SiteRoleId");

                    b.HasIndex("SiteStatusId");

                    b.HasIndex("SiteTypeId");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("NBS.Models.DataModels.SiteRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SiteRoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteRole");
                });

            modelBuilder.Entity("NBS.Models.DataModels.SiteStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SiteStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.SiteSurvey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Ended")
                        .HasColumnType("datetime2");

                    b.Property<string>("FloorFiveDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorFourDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorOneDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorThreeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorTwoDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImageModelId")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId1")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId10")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId11")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId12")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId13")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId14")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId15")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId16")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId17")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId18")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId19")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId2")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId20")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId21")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId22")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId23")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId24")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId3")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId4")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId5")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId6")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId7")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId8")
                        .HasColumnType("int");

                    b.Property<int?>("ImageModelId9")
                        .HasColumnType("int");

                    b.Property<int?>("IncidentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Scheduled")
                        .HasColumnType("datetime2");

                    b.Property<string>("SiteSurveyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteSurveyStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Started")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ImageModelId");

                    b.HasIndex("ImageModelId1");

                    b.HasIndex("ImageModelId10");

                    b.HasIndex("ImageModelId11");

                    b.HasIndex("ImageModelId12");

                    b.HasIndex("ImageModelId13");

                    b.HasIndex("ImageModelId14");

                    b.HasIndex("ImageModelId15");

                    b.HasIndex("ImageModelId16");

                    b.HasIndex("ImageModelId17");

                    b.HasIndex("ImageModelId18");

                    b.HasIndex("ImageModelId19");

                    b.HasIndex("ImageModelId2");

                    b.HasIndex("ImageModelId20");

                    b.HasIndex("ImageModelId21");

                    b.HasIndex("ImageModelId22");

                    b.HasIndex("ImageModelId23");

                    b.HasIndex("ImageModelId24");

                    b.HasIndex("ImageModelId3");

                    b.HasIndex("ImageModelId4");

                    b.HasIndex("ImageModelId5");

                    b.HasIndex("ImageModelId6");

                    b.HasIndex("ImageModelId7");

                    b.HasIndex("ImageModelId8");

                    b.HasIndex("ImageModelId9");

                    b.HasIndex("IncidentId");

                    b.HasIndex("SiteSurveyStatusId");

                    b.ToTable("SiteSurvey");
                });

            modelBuilder.Entity("NBS.Models.DataModels.SiteSurveyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SiteSurveyStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteSurveyStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.SiteType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SiteTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteType");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Action")
                        .HasColumnType("bit");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("NBS.Models.DataModels.SupportRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTimePosted")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequestPrioId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SiteArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RequestPrioId");

                    b.HasIndex("RequestStatusId");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("SupportRequests");
                });

            modelBuilder.Entity("NBS.Models.DataModels.TBPStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TBPStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TBPStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.TBPTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SallaryAccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SallaryAccountId");

                    b.ToTable("TBPTransaction");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Testing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimePosted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Testing");
                });

            modelBuilder.Entity("NBS.Models.DataModels.TimBanksPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Ended")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Incident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Outlay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Started")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TBPStatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WLNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("TBPStatusId");

                    b.ToTable("TimBanksPost");
                });

            modelBuilder.Entity("NBS.Models.DataModels.TimeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateTimeEnded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeStarted")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("IncidentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<string>("LogNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MtrCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TimeLogStatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WLogId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("IncidentId");

                    b.HasIndex("PersonId");

                    b.HasIndex("TimeLogStatusId");

                    b.HasIndex("WLogId");

                    b.ToTable("TimeLog");
                });

            modelBuilder.Entity("NBS.Models.DataModels.TimeLogStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TimeLogStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TimeLogStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.TimeReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateTimeCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("TimeReportName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("PersonId");

                    b.ToTable("TimeReport");
                });

            modelBuilder.Entity("NBS.Models.DataModels.TimeReportStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TimeReportStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TimeReportStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SallaryAccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SallaryAccountId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("NBS.Models.DataModels.WLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateTimeFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateTimeTo")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Hours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("IncidentId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WLNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WLogStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.HasIndex("PersonId");

                    b.HasIndex("WLogStatusId");

                    b.ToTable("WLog");
                });

            modelBuilder.Entity("NBS.Models.DataModels.WLogStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WLogStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WLogStatus");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("NBS.Models.DataModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("NBS.Models.DataModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NBS.Models.DataModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("NBS.Models.DataModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("NBS.ImageUpload.Models.ImageModel", b =>
                {
                    b.HasOne("NBS.Models.DataModels.Incident", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("NBS.Models.DataModels.AgendaPost", b =>
                {
                    b.HasOne("NBS.Models.DataModels.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Asset", b =>
                {
                    b.HasOne("NBS.Models.DataModels.AssetStatus", "AssetStatus")
                        .WithMany()
                        .HasForeignKey("AssetStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.AssetType", "AssetType")
                        .WithMany()
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AssetStatus");

                    b.Navigation("AssetType");

                    b.Navigation("Brand");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Bill", b =>
                {
                    b.HasOne("NBS.Models.DataModels.BillStatus", "BillStatus")
                        .WithMany()
                        .HasForeignKey("BillStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Company", "CompanyToBill")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Company", "CompanyBilling")
                        .WithMany()
                        .HasForeignKey("CompanyId1")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.NABLog", "NABLog1")
                        .WithMany()
                        .HasForeignKey("NABLogId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.NABLog", "NABLog2")
                        .WithMany()
                        .HasForeignKey("NABLogId1")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.NABLog", "NABLog3")
                        .WithMany()
                        .HasForeignKey("NABLogId2")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.NABLog", "NABLog4")
                        .WithMany()
                        .HasForeignKey("NABLogId3")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.NABLog", "NABLog5")
                        .WithMany()
                        .HasForeignKey("NABLogId4")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BillStatus");

                    b.Navigation("CompanyBilling");

                    b.Navigation("CompanyToBill");

                    b.Navigation("NABLog1");

                    b.Navigation("NABLog2");

                    b.Navigation("NABLog3");

                    b.Navigation("NABLog4");

                    b.Navigation("NABLog5");
                });

            modelBuilder.Entity("NBS.Models.DataModels.BillingPost", b =>
                {
                    b.HasOne("NBS.Models.DataModels.BPStatus", "BPStatus")
                        .WithMany()
                        .HasForeignKey("BPStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Person", "Employee")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BPStatus");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Company", b =>
                {
                    b.HasOne("NBS.Models.DataModels.CompanyRole", "CompanyRole")
                        .WithMany()
                        .HasForeignKey("CompanyRoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.CompanyStatus", "CompanyStatus")
                        .WithMany()
                        .HasForeignKey("CompanyStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.CompanyType", "CompanyType")
                        .WithMany()
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CompanyRole");

                    b.Navigation("CompanyStatus");

                    b.Navigation("CompanyType");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Incident", b =>
                {
                    b.HasOne("NBS.Models.DataModels.IncidentPriority", "IncidentPriority")
                        .WithMany()
                        .HasForeignKey("IncidentPriorityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.IncidentStatus", "IncidentStatus")
                        .WithMany()
                        .HasForeignKey("IncidentStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.IncidentType", "IncidentType")
                        .WithMany()
                        .HasForeignKey("IncidentTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.MtrlList", "MtrlList")
                        .WithMany()
                        .HasForeignKey("MtrlListId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Person", "Creator")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Person", "Receiver")
                        .WithMany()
                        .HasForeignKey("PersonId1")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Person", "FEAssigned")
                        .WithMany()
                        .HasForeignKey("PersonId2")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.PurchaseOrder", "PurchaseOrder")
                        .WithMany()
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("FEAssigned");

                    b.Navigation("IncidentPriority");

                    b.Navigation("IncidentStatus");

                    b.Navigation("IncidentType");

                    b.Navigation("MtrlList");

                    b.Navigation("PurchaseOrder");

                    b.Navigation("Receiver");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Job", b =>
                {
                    b.HasOne("NBS.Models.DataModels.Plan", null)
                        .WithMany("Jobs")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("NBS.Models.DataModels.NABLog", b =>
                {
                    b.HasOne("NBS.Models.DataModels.Incident", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.NABLogStatus", "NABLogStatus")
                        .WithMany()
                        .HasForeignKey("NABLogStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.WLog", "WLog")
                        .WithMany()
                        .HasForeignKey("WLogId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Incident");

                    b.Navigation("NABLogStatus");

                    b.Navigation("WLog");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Offer", b =>
                {
                    b.HasOne("NBS.Models.DataModels.Incident", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.OfferStatus", "OfferStatus")
                        .WithMany()
                        .HasForeignKey("OfferStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Person", "Employee")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Employee");

                    b.Navigation("Incident");

                    b.Navigation("OfferStatus");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Outlay", b =>
                {
                    b.HasOne("NBS.Models.DataModels.ApplicationUser", "Employee")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Person", b =>
                {
                    b.HasOne("NBS.Models.DataModels.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.PersonAccounts", "PersonAccounts")
                        .WithMany()
                        .HasForeignKey("PersonAccountsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.PersonRole", "PersonRole")
                        .WithMany()
                        .HasForeignKey("PersonRoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.PersonStatus", "PersonStatus")
                        .WithMany()
                        .HasForeignKey("PersonStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.PersonType", "PersonType")
                        .WithMany()
                        .HasForeignKey("PersonTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Company");

                    b.Navigation("PersonAccounts");

                    b.Navigation("PersonRole");

                    b.Navigation("PersonStatus");

                    b.Navigation("PersonType");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Plan", b =>
                {
                    b.HasOne("NBS.Models.DataModels.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("NBS.Models.DataModels.ProjectPost", b =>
                {
                    b.HasOne("NBS.Models.DataModels.ProjectPostStatus", "Status")
                        .WithMany()
                        .HasForeignKey("ProjectPostStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("NBS.Models.DataModels.SallaryAccount", b =>
                {
                    b.HasOne("NBS.Models.DataModels.Person", "AccountOwner")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AccountOwner");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Site", b =>
                {
                    b.HasOne("NBS.Models.DataModels.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Person", "Contact1")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Person", "Contact2")
                        .WithMany()
                        .HasForeignKey("PersonId1")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.SiteRole", "SiteRole")
                        .WithMany()
                        .HasForeignKey("SiteRoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.SiteStatus", "SiteStatus")
                        .WithMany()
                        .HasForeignKey("SiteStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.SiteType", "SiteType")
                        .WithMany()
                        .HasForeignKey("SiteTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Company");

                    b.Navigation("Contact1");

                    b.Navigation("Contact2");

                    b.Navigation("SiteRole");

                    b.Navigation("SiteStatus");

                    b.Navigation("SiteType");
                });

            modelBuilder.Entity("NBS.Models.DataModels.SiteSurvey", b =>
                {
                    b.HasOne("NBS.Models.DataModels.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel1")
                        .WithMany()
                        .HasForeignKey("ImageModelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel2")
                        .WithMany()
                        .HasForeignKey("ImageModelId1")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel11")
                        .WithMany()
                        .HasForeignKey("ImageModelId10")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel12")
                        .WithMany()
                        .HasForeignKey("ImageModelId11")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel13")
                        .WithMany()
                        .HasForeignKey("ImageModelId12")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel14")
                        .WithMany()
                        .HasForeignKey("ImageModelId13")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel15")
                        .WithMany()
                        .HasForeignKey("ImageModelId14")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel16")
                        .WithMany()
                        .HasForeignKey("ImageModelId15")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel17")
                        .WithMany()
                        .HasForeignKey("ImageModelId16")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel18")
                        .WithMany()
                        .HasForeignKey("ImageModelId17")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel19")
                        .WithMany()
                        .HasForeignKey("ImageModelId18")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel20")
                        .WithMany()
                        .HasForeignKey("ImageModelId19")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel3")
                        .WithMany()
                        .HasForeignKey("ImageModelId2")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel21")
                        .WithMany()
                        .HasForeignKey("ImageModelId20")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel22")
                        .WithMany()
                        .HasForeignKey("ImageModelId21")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel23")
                        .WithMany()
                        .HasForeignKey("ImageModelId22")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel24")
                        .WithMany()
                        .HasForeignKey("ImageModelId23")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel25")
                        .WithMany()
                        .HasForeignKey("ImageModelId24")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel4")
                        .WithMany()
                        .HasForeignKey("ImageModelId3")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel5")
                        .WithMany()
                        .HasForeignKey("ImageModelId4")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel6")
                        .WithMany()
                        .HasForeignKey("ImageModelId5")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel7")
                        .WithMany()
                        .HasForeignKey("ImageModelId6")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel8")
                        .WithMany()
                        .HasForeignKey("ImageModelId7")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel9")
                        .WithMany()
                        .HasForeignKey("ImageModelId8")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.ImageUpload.Models.ImageModel", "ImageModel10")
                        .WithMany()
                        .HasForeignKey("ImageModelId9")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Incident", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.SiteSurveyStatus", "SiteSurveyStatus")
                        .WithMany()
                        .HasForeignKey("SiteSurveyStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("ImageModel1");

                    b.Navigation("ImageModel10");

                    b.Navigation("ImageModel11");

                    b.Navigation("ImageModel12");

                    b.Navigation("ImageModel13");

                    b.Navigation("ImageModel14");

                    b.Navigation("ImageModel15");

                    b.Navigation("ImageModel16");

                    b.Navigation("ImageModel17");

                    b.Navigation("ImageModel18");

                    b.Navigation("ImageModel19");

                    b.Navigation("ImageModel2");

                    b.Navigation("ImageModel20");

                    b.Navigation("ImageModel21");

                    b.Navigation("ImageModel22");

                    b.Navigation("ImageModel23");

                    b.Navigation("ImageModel24");

                    b.Navigation("ImageModel25");

                    b.Navigation("ImageModel3");

                    b.Navigation("ImageModel4");

                    b.Navigation("ImageModel5");

                    b.Navigation("ImageModel6");

                    b.Navigation("ImageModel7");

                    b.Navigation("ImageModel8");

                    b.Navigation("ImageModel9");

                    b.Navigation("Incident");

                    b.Navigation("SiteSurveyStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.SupportRequest", b =>
                {
                    b.HasOne("NBS.Models.DataModels.RequestPrio", "RequestPrio")
                        .WithMany()
                        .HasForeignKey("RequestPrioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.RequestStatus", "RequestStatus")
                        .WithMany()
                        .HasForeignKey("RequestStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.RequestType", "RequestType")
                        .WithMany()
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("RequestPrio");

                    b.Navigation("RequestStatus");

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("NBS.Models.DataModels.TBPTransaction", b =>
                {
                    b.HasOne("NBS.Models.DataModels.SallaryAccount", "SallaryAccount")
                        .WithMany()
                        .HasForeignKey("SallaryAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SallaryAccount");
                });

            modelBuilder.Entity("NBS.Models.DataModels.TimBanksPost", b =>
                {
                    b.HasOne("NBS.Models.DataModels.Person", "Employee")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.TBPStatus", "TBPStatus")
                        .WithMany()
                        .HasForeignKey("TBPStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Employee");

                    b.Navigation("TBPStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.TimeLog", b =>
                {
                    b.HasOne("NBS.Models.DataModels.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Incident", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Person", "Employee")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.TimeLogStatus", "TimeLogStatus")
                        .WithMany()
                        .HasForeignKey("TimeLogStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.WLog", "WLog")
                        .WithMany()
                        .HasForeignKey("WLogId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Employee");

                    b.Navigation("Incident");

                    b.Navigation("TimeLogStatus");

                    b.Navigation("WLog");
                });

            modelBuilder.Entity("NBS.Models.DataModels.TimeReport", b =>
                {
                    b.HasOne("NBS.Models.DataModels.ApplicationUser", "Creator")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Person", "Employee")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Transaction", b =>
                {
                    b.HasOne("NBS.Models.DataModels.SallaryAccount", "SallaryAccount")
                        .WithMany()
                        .HasForeignKey("SallaryAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SallaryAccount");
                });

            modelBuilder.Entity("NBS.Models.DataModels.WLog", b =>
                {
                    b.HasOne("NBS.Models.DataModels.Incident", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.Person", "Employee")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("NBS.Models.DataModels.WLogStatus", "WLogStatus")
                        .WithMany()
                        .HasForeignKey("WLogStatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Employee");

                    b.Navigation("Incident");

                    b.Navigation("WLogStatus");
                });

            modelBuilder.Entity("NBS.Models.DataModels.Plan", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
